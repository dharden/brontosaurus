{
  "name": "imagediff",
  "main": "./imagediff.js",
  "description": "JavaScript Canvas based imagediff utility.",
  "homepage": "http://HumbleSoftware.github.com/js-imagediff/",
  "keywords": [
    "util",
    "server",
    "client",
    "browser",
    "canvas",
    "diff",
    "imagediff"
  ],
  "author": {
    "name": "Carl Sutherland",
    "email": "carl@humblesoftware.com",
    "url": "http://www.humblesoftware.com/"
  },
  "contributors": [
    {
      "name": "Jordan Santell",
      "email": "@jsantell"
    }
  ],
  "dependencies": {
    "canvas": ">= 0.7.3 && < 0.11.0"
  },
  "devDependencies": {
    "jasmine-node": ">=1.0.20",
    "smoosh": ">=0.3.1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/HumbleSoftware/js-imagediff.git"
  },
  "version": "1.0.3",
  "engines": {
    "node": "*"
  },
  "bin": {
    "imagediff": "./bin/imagediff"
  },
  "readme": "js-imagediff\n============\n\nJavaScript / Canvas based imagediff utility.\n\nAPI\n---\n\n* `createCanvas()` create a new Canvas element.\n* `createImageData(width, height)` create a new ImageData object.\n* `isImage(object)` tests for Image object.\n* `isCanvas(object)` tests for Canvas object.\n* `isContext(object)` tests for CanvasRenderingContext2D object.\n* `isImageData(object)` tests for ImageData object.\n* `isImageType(object)` tests for any of the above.\n* `toImageData(object)` converts image type object to a new ImageData object.\n* `equal(a, b, tolerance)` tests image type objects for equality; accepts tolerance in pixels.\n* `diff(a, b)` performs an image diff on a and b, returning a - b.\n* `noConflict()` removes imagediff from the global space for compatibility, returning imagediff.\n* `imageDataToPNG(imageData, outputFile, (callback))` renders the imageData to png in outputFile, firing an optional callback upon save. (Node only)\n\nCommand Line\n---\n* `imagediff [-e|equal] [-t|tolerance VALUE] FILE_A FILE_B` tests equality of two image files with an optional tolerance, printing 'true' or 'false'.\n* `imagediff [-d|diff] FILE_A FILE_B OUTPUT_FILE` renders an imagediff between two files, saving as the output file.\n\nUnit Testing Canvas\n-------------------\n\nJS ImageDiff opens up the easy testing of Canvas and other image-like objects in JavaScript.  js-imagediff supplies two Jasmine matchers to make this easier.\n\n* `toImageDiffEqual(expected, tolerance)` expect a result to equal another image type.\n* `toBeImageData()` expect a result to be ImageData.\n\nOn failed tests, `toImageDiffEqual()` will display the expected image, the actual image and the imagediff of the two letting you easily spot mistakes.\n\nTo use matchers:\n\n```javascript\n  beforeEach(function () {\n    this.addMatchers(imagediff.jasmine);\n  });\n```\n\nDemo\n----\n\nA demo is available at http://humblesoftware.github.com/js-imagediff/\nA Jasmine test demo is available at A demo is available at http://humblesoftware.github.com/js-imagediff/test.html\n\nChangelog\n---------\n<h3>1.0.3</h3>\n* Added NPM/node.js support.\n* Added command line interface for `equal` and `diff` methods.\n* Added `imageDataToPNG` method for node environments.\n* Added tolerance to handle lossy formats and provide option for acceptable difference.\n\n<h3>1.0.2</h3>\n* Added optional width / height parameters to `createCanvas` for symmetry with `createImageData`.\n* Fixed issue with `toImageDiffEqual()` matcher and non Node types - will no convert ImageData and contexts to Canvas elements for display.\n\n<h3>1.0.1</h3>\n* Moved library to imagediff.js\n* Added Jasmine matchers\n* Minor bug fixes, lint fixes.\n\nAuthor\n------\nCarl Sutherland carl@humblesoftware.com\nhttp://www.humblesoftware.com\n",
  "_id": "imagediff@1.0.3",
  "_from": "imagediff"
}
